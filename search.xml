<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>article title</title>
    <url>/2021/11/28/article-title/</url>
    <content><![CDATA[<p>在很久很久以前</p>
]]></content>
      <categories>
        <category>新技术</category>
      </categories>
      <tags>
        <tag>github,hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Centos7虚拟机下groovy安装</title>
    <url>/2021/12/02/Centos7%E4%B8%8Bgroovy%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<p>安装命令<br>curl -s get.sdkman.io | bash<br>source “/root/.sdkman/bin/sdkman-init.sh”<br>sdk install groovy</p>
<p>检查版本<br> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# groovy --version</span><br><span class="line">Groovy Version: 3.0.9 JVM: 11.0.13 Vendor: Red Hat, Inc. OS: Linux</span><br></pre></td></tr></table></figure></p>
<p>设置环境变量<br>export GROOVY_HOME=/usr/local/groovy-3.0.9<br>export PATH=${GROOVY_HOME}/bin:${PATH}</p>
]]></content>
      <categories>
        <category>测试右移</category>
      </categories>
      <tags>
        <tag>Centos7  Groovy</tag>
      </tags>
  </entry>
  <entry>
    <title>Centos7虚拟机部署jenkins</title>
    <url>/2021/12/02/jenkins-install-deploy/</url>
    <content><![CDATA[<br>
<font size="4"> 
虚拟机已安装了 Centos7操作系统,省略<br>
jenkins官网有基于Centos的安装命令，您可以直接输入，省略 </font> <br>
<font size="4"> 
启动jenkins : 
</font> 
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# service jenkins start</span><br><span class="line">Starting jenkins (via systemctl):                          [  确定  ]</span><br></pre></td></tr></table></figure>
<br>
<font size="4"> 
但是宿主机无法访问jenkins
why?黑人脸</font> <br>

<p><font size="4"> 因为防火墙没有关闭！顺手关闭开机启动</font> <br><br><font size="4"> 赶紧输入：</font> <br></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br><span class="line">systemctl disable firewalld.service</span><br></pre></td></tr></table></figure>

<br>
<font size="4">解决了，访问成功如图：</font> <br>
<blockquote class="pullquote"><p><img src="/2021/12/02/jenkins-install-deploy/jenkins_started.jpg" alt="jenkins_started"></p>
</blockquote>

<p><font size="4">输入密码，默认密码哦！</font></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat /var/lib/jenkins/secrets/initialAdminPassword</span><br></pre></td></tr></table></figure>
<br>
<font size="4">下一步，选推荐就可以了</font>

<p><img src="/2021/12/02/jenkins-install-deploy/password_entry.png" alt="password_entry"><br><br><br><font size="4">进度条君漫长的等待中，大约半小时吧我猜的</font></p>
<p><img src="/2021/12/02/jenkins-install-deploy/process_bar.jpg" alt="process_bar"></p>
<p><font size="4">完成安装了，开始浪吧</font></p>
<p><img src="/2021/12/02/jenkins-install-deploy/complete_install.jpg" alt="complete_install"></p>
]]></content>
  </entry>
  <entry>
    <title>jenkins plugins speed increase</title>
    <url>/2021/12/02/jenkins-plugins-speed-increse/</url>
    <content><![CDATA[<p><font size="4">jenkins插件下载一般都很慢，防火墙太强</font></p>
<p>解决方法是<code>替换镜像源</code><br><i>1.首先到jenkins的默认工作目录下</i><br><i>2.然后用sed命令</i></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost etc]# cd /var/lib/jenkins/updates/</span><br><span class="line">[root@localhost updates]# sed -i &#x27;s/http:\/\/updates.jenkins-ci.org\/download/https:\/\/mirrors.tuna.tsinghua.edu.cn\/jenkins/g&#x27; default.json &amp;&amp; sed -i &#x27;s/http:\/\/www.google.com/https:\/\/www.baidu.com/g&#x27; default.json</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>了解Decorator</title>
    <url>/2021/11/28/deractor/</url>
    <content><![CDATA[<p><font size="4"> 1.装饰器是什么？ </font><br>@decorator</p>
<p><font size="4">2.有什么作用？</font><br>项目中的主要用途：计算function的运算时间</p>
<p><font size="4">3.如何写一个装饰器？</font><br>   例子：计算函数运行时间的装饰器demo</p>
<span id="more"></span>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment">#装饰器</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decorator</span>(<span class="params">func</span>):</span><span class="comment">#1.装饰器参数func接收了一个函数句柄即：fun_a</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span>():</span></span><br><span class="line">        start = time.time()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;start run&#x27;</span>)</span><br><span class="line">        func()<span class="comment"># 3.加上()展开了句柄func()</span></span><br><span class="line">        end = time.time()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;end run&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;函数运行时间是：%.8f&#x27;</span> % (end - start))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> wrapper <span class="comment"># 2.装饰器通过return来运行 wrapper()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#被装饰的函数</span></span><br><span class="line"><span class="meta">@decorator</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun_a</span>():</span></span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fun_a()</span><br></pre></td></tr></table></figure>
<blockquote class="pullquote"><p>输出：<br>start run<br>end run<br>函数运行时间是：1.00012064</p>
<p>Process finished with exit code 0</p>
</blockquote>

<p><font size="4">4.如何写一个带参数的装饰器？</font><br>例子：定义一个装饰器控制函数运行次数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 外层参数n为控制fun_b运行次数，内层参数为fun_b的函数句柄</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decorator</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner</span>(<span class="params">func</span>):</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span>():</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">                func()</span><br><span class="line">        <span class="keyword">return</span> wrapper</span><br><span class="line">    <span class="keyword">return</span> inner</span><br><span class="line"></span><br><span class="line"><span class="meta">@decorator(<span class="params">n=<span class="number">2</span></span>)</span><span class="comment"># n=2表示一共要运行2次</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun_b</span>():</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;function_run&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    fun_b()</span><br></pre></td></tr></table></figure>
<blockquote class="pullquote"><p>function_run<br>function_run</p>
<p>Process finished with exit code 0</p>
</blockquote>

<p>带参数的装饰器就是在装饰器函数再加一层而已，其他不变</p>
]]></content>
      <categories>
        <category>python语法</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>pipeline build &amp; groovy useage</title>
    <url>/2021/12/02/pipline-bulid-groovy-useage/</url>
    <content><![CDATA[<p><i>前提： 已安装 <code>pipline plugin</code></i></p>
<p><font size="4" clolr="blue">新建item &gt; 选择type为Pipline或流水线 &gt; 流水线script里写一段脚本(页面最下方的,选pipline script)</font></p>
<p><b>举个例子demo:</b></p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">    agent any</span><br><span class="line">    triggers&#123;</span><br><span class="line">          pollSCM(<span class="string">&#x27;H H(9-16)/2 * * 1-5&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    stages &#123;</span><br><span class="line">        stage(<span class="string">&#x27;Build Scenario&#x27;</span>)&#123;</span><br><span class="line">            steps&#123;</span><br><span class="line">               println <span class="string">&#x27;build&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(<span class="string">&quot;Test Scenario&quot;</span>)&#123;</span><br><span class="line">            steps&#123;</span><br><span class="line">                println <span class="string">&#x27;Test&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stage(<span class="string">&quot;Deploy Scenario&quot;</span>)&#123;</span><br><span class="line">            steps&#123;</span><br><span class="line">                println <span class="string">&quot;Deploy&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>解释一下’H H(9-16)/2 * * 1-5’<br>H 哈希值<br>H(9-16)/2 9点到16点，每隔2小时</p>
<ul>
<li>每天 *每月<br>1-5 周一到周五</li>
</ul>
<p>脚本写好，让我们来build now<br>oops!!!<br>build now 报错了<br>pipline插件没装完整？一起来debug<br>1.安装所有插件,等待的同时，网上看看资料，有没有相同情况<br>额发现了一个低级错误 ：|<br>一篇文章中这么写道：java.lang.NoSuchMethodError: No such DSL method ‘agent’ found among steps<br>引发我的联想 ‘agent’ 就是出错的地方啊，我的报错是这样：java.lang.NoSuchMethodError: No such DSL method ‘pipline’ found among steps<br>会不会是我单词写错了？？？<br>oh ! 还真是写错了，应该是pipeline,写错成 pipline,额，可能是pip install 用多了吧</p>
<p>再次构建，成功了！</p>
<blockquote class="pullquote"><p><img src="/2021/12/02/pipline-bulid-groovy-useage/oops.jpg" alt="oops"><br>前9次失败</p>
</blockquote>

]]></content>
  </entry>
</search>
